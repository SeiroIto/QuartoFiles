---
title: "Produce random sequence in [.3, .7]"
subtitle: "A/Bテスト用のランダム表示比率"
author: "Seiro Ito"
format:
  html:
    toc: true
    toc-location: left
    number-sections: true
    number-depth: 2
    embed-resources: true
    smooth-scroll: true
    anchor-sections: true
bibliography: ../seiro.bib
resources:
  - ab.pdf
# setwd("C:/seiro/docs/personal/Miscelleneous/QuartoFiles/posts/ABIDE/"); quarto::quarto_render("ab.qmd")
# quarto render ab.qmd
---
<style>
br {
  /* change <br> space length*/
  display: block; /* makes it have a width */
  content: ""; /* clears default height */
  margin-top: 10px; /* change this to whatever height you want it */
}
</style>

## A/Bテスト用の乱数


```{r ab test}
#| echo: false
asc <- function(x)
{
  if (!is.factor(x)) x <- as.factor(unlist(x))
  return(levels(x)[as.integer(x)])
}
seqrep <- function(seqn, repvec)
{
  Vec <- NULL
  for (i in 1:length(repvec)) Vec <- c(Vec, paste(rep(seqn, repvec[i]), sep = "", collapse = ""))
  return(Vec)
}
putzeroontop <- function(z, autozero = T, totaldigits = F)
#  autozero: if numeric, add the given digit of zero on top
#  totaldigits: if numeric, total digits will be set (001 is 3) if maximum 0s to be added is smaller
#    modified to accept NA in z: July 18, 2016
{
  iic <- grep("\\D", z, perl = T)
  iina <- which(is.na(z))
  iin <- grep("\\d", z, perl = T)
  digs <- nchar(asc(z))
  adddig <- max(digs, na.rm = T) - digs
  if (is.numeric(autozero)) 
  {
    maxadd <- max(max(digs, na.rm = T) - digs, na.rm = T)
    if (autozero > maxadd) adddig <- adddig + (autozero - maxadd)
  }
  if (is.numeric(totaldigits))
    if (totaldigits > max(digs, na.rm = T)) 
    adddig <- adddig + (totaldigits - max(digs, na.rm = T))
  adddig[c(iic, iina)] <- 0
  z <- paste(seqrep("0", adddig), z, sep = "")
  z[grep("NA", z)] <- NA
  return(z)
}
library(knitr)
```

最初の50日分の乱数  

* 0.5近傍が少ない  
   * 悪いことではないが、少し極端な値が多いかも  
* 緑線は平均値

```{r plot sequence for first 50 days first trial}
#| echo: false
library(data.table)
library(ggplot2)
set.seed(20240731)
rn <- runif(10000)
rn <- rn[rn >= .25 & rn <= .75]
rn2 <- data.table(days=1:length(rn), val=c(rn))
library(ggplot2)
ggplot(rn2[1:50, ], aes(x = val)) +
  geom_histogram(bins = length(seq(.25, .75, .02))) + 
  geom_vline(xintercept = mean(rn2[1:50, val]), color = "green")
```

* 何度も乱数を発生させても良いけど、均一分布に近くなるような基準が必要かも  
   * 最初の50日おける最小頻度と最大頻度の差が一定範囲内(2以下)にする制約


以下のコードをRで読み込みます。

```{r generate sequence for first 1400 days}
#| warning: false
#| output: false
set.seed(20240731)
eye <- 0
dh <- 10
while (dh > 2.0) {
  eye <- eye + 1
  rn <- runif(10000)
  rn <- rn[rn >= .24 & rn <= .76]
  h <- hist(rn[1:50], breaks=seq(min(rn), max(rn), length.out=20))
  imax <- which.max(h$density)
  imin <- which.min(h$density)
  dh <- h$density[imax] - h$density[imin]
}
rn2 <- data.table(days=1:length(rn), val=c(rn))
rn2[, more := "B"]
rn2[val > .5, more := "A"]
rn2[1:50, ]
```
```{r display sequence for first 1400 days}
rn3 <- matrix(round(rn[1:(200*7)], 2), ncol = 7, byrow = T)
dimnames(rn3) <- list(putzeroontop(1:nrow(rn3)), c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"))
kable(rn3)
write.table(formatC(rn3, digits = 2, format = "f"), "ab.tsv", quote = F, sep = "\t")
```

`r formatC(eye, digits = 0, format = "f")`回目の乱数発生で基準を満たしました。dh=`r dh`, 中央点は`r h$mids`、各中央点の確率密度は`r h$density`。

```{r plot sequence for first 50 days}
#| warning: false
#| echo: false
g <- ggplot(rn2, aes(x = days, y = val, colour = as.numeric(val), fill = as.numeric(val))) +
  geom_point() + geom_line(aes(colour = as.numeric(val)))
g + scale_x_continuous(limits = c(1, 50)) + 
  theme(
    legend.position = "bottom"
  ) + 
  geom_hline(data = rn2, yintercept = mean(rn2[1:50, val]), color = "green")
```
```{r plot density for first 50 days, warning = F}
#| echo: false
#| warning: false
hist(rn[1:50], breaks=seq(min(rn), max(rn), length.out=20))
rn2 <- data.table(days=1:length(rn), val=rn)
#ggplot(rn2[1:50, ], aes(x=val)) +
#  geom_histogram(bins = 20) + 
#  geom_vline(xintercept = mean(rn2[1:50, val]), color = "green")
```

最初の200日の乱数とそのヒストグラム。

```{r plot sequence for first 200 days, warning = F}
#| echo: false
rn2 <- data.table(days=1:length(rn), val=c(rn))
rn2[, more := "B"]
rn2[val > .5, more := "A"]
library(ggplot2)
g <- ggplot(rn2, aes(x = days, y = val, colour = as.numeric(val), 
    fill = as.numeric(val))) +
  geom_point() + geom_line(aes(colour = as.numeric(val)))
g + scale_x_continuous(limits = c(1, 200)) + 
  theme(
    legend.position = "bottom"
  ) + 
  geom_hline(data = rn2, yintercept = mean(rn2[1:200, val]), color = "green")
```

```{r plot density for first 200 days, warning = F}
#| echo: false
hist(rn[1:200], breaks=seq(min(rn), max(rn), length.out=20))
```

最初の100週の乱数とそのヒストグラム。

```{r plot sequence for first 100 weeks, warning = F}
#| echo: false
library(ggplot2)
g <- ggplot(rn2, aes(x = days, y = val, colour = as.numeric(val), 
    fill = as.numeric(val))) +
  geom_point() + geom_line(aes(colour = as.numeric(val)))
g + scale_x_continuous(limits = c(1, 700)) + 
  theme(
    legend.position = "bottom"
  ) + 
  geom_hline(data = rn2, yintercept = mean(rn2[1:700, val]), color = "green")
```

```{r plot density for first 100 weeks, warning = F}
#| echo: false
library(ggplot2)
hist(rn[1:1400], breaks=seq(min(rn), max(rn), length.out=20))
```

```{r reshape and attach dates, eval = F}
rn0 <- fread("ab.tsv")
library(lubridate)
abdates <- seq(ymd('2024-08-01'), length.out = 1400, by = '1 day')
rn0[, V1 := NULL]
ab <- data.table(date=abdates, dow = weekdays(abdates), 
  value=formatC(c(t(as.matrix(rn0))), digits = 2, format = "f"))
write.table(ab, "abLong.tsv", quote = F, sep = "\t")
```

